# ------------------------------------------------------------
# This file is the main CMakeLists of mem of headcode.space
#
# The 'LICENSE.txt' file in the project root holds the software license.
# Copyright (C) 2020 headcode.space
# https://www.headcode.space, <info@headcode.space>
# ------------------------------------------------------------

stages:
  - build
  - package

build:
  stage: build
  image: registry.gitlab.com/headcode.space/memtool:ubuntu-focal
  script:
    - git submodule init
    - git submodule update
    - rm -rf build &> /dev/null
    - mkdir -p build
    - cd build
    - cmake -DBUILD_TESTING=On -DCMAKE_BUILD_TYPE=Debug -DPROFILING_MODE_ENABLED:Bool=On ..
    - make
    - ctest -VV -F --timeout 10.0
    - make run-gcovr
    - make package_source
    - cd ${CI_PROJECT_DIR}
  artifacts:
    paths:
      - build/*.tar.gz
      - build/gcovr-report.xml
    name: ${CI_PROJECT_NAME}-sources
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

package-debian-buster:
  stage: package
  image: registry.gitlab.com/headcode.space/memtool:debian-buster
  script:
    - git submodule init
    - git submodule update
    - rm -rf build &> /dev/null
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=DEB -DCPACK_SYSTEM_NAME=debian-buster ..
    - make
    - make package
    - export CPACK_PACKAGE_FILE_NAME=`grep CPACK_PACKAGE_FILE_NAME CPackConfig.cmake | cut -d \" -f 2`
    - export CPACK_PACKAGE_VERSION=`grep 'set(CPACK_PACKAGE_VERSION ' CPackConfig.cmake | cut -d \" -f 2`
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${CPACK_PACKAGE_FILE_NAME}.deb" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hcs-mem/${CPACK_PACKAGE_VERSION}/${CPACK_PACKAGE_FILE_NAME}.deb"'
  artifacts:
    paths:
      - build/*.deb
    name: ${CI_PROJECT_NAME}-debian-buster

package-ubuntu-bionic:
  stage: package
  image: registry.gitlab.com/headcode.space/memtool:ubuntu-bionic
  script:
    - git submodule init
    - git submodule update
    - rm -rf build &> /dev/null
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=DEB -DCPACK_SYSTEM_NAME=ubuntu-bionic ..
    - make
    - make package
    - export CPACK_PACKAGE_FILE_NAME=`grep CPACK_PACKAGE_FILE_NAME CPackConfig.cmake | cut -d \" -f 2`
    - export CPACK_PACKAGE_VERSION=`grep 'set(CPACK_PACKAGE_VERSION ' CPackConfig.cmake | cut -d \" -f 2`
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${CPACK_PACKAGE_FILE_NAME}.deb" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hcs-mem/${CPACK_PACKAGE_VERSION}/${CPACK_PACKAGE_FILE_NAME}.deb"'
  artifacts:
    paths:
      - build/*.deb
    name: ${CI_PROJECT_NAME}-ubuntu-bionic

package-ubuntu-focal:
  stage: package
  image: registry.gitlab.com/headcode.space/memtool:ubuntu-focal
  script:
    - git submodule init
    - git submodule update
    - rm -rf build &> /dev/null
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=DEB -DCPACK_SYSTEM_NAME=ubuntu-focal ..
    - make
    - make package
    - export CPACK_PACKAGE_FILE_NAME=`grep CPACK_PACKAGE_FILE_NAME CPackConfig.cmake | cut -d \" -f 2`
    - export CPACK_PACKAGE_VERSION=`grep 'set(CPACK_PACKAGE_VERSION ' CPackConfig.cmake | cut -d \" -f 2`
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${CPACK_PACKAGE_FILE_NAME}.deb" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hcs-mem/${CPACK_PACKAGE_VERSION}/${CPACK_PACKAGE_FILE_NAME}.deb"'
  artifacts:
    paths:
      - build/*.deb
    name: ${CI_PROJECT_NAME}-ubuntu-focal

package-fedora32:
  stage: package
  image: registry.gitlab.com/headcode.space/memtool:fedora32
  script:
    - git submodule init
    - git submodule update
    - rm -rf build &> /dev/null
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=RPM -DCPACK_SYSTEM_NAME=fedora32 ..
    - make
    - make package
    - export CPACK_PACKAGE_FILE_NAME=`grep CPACK_PACKAGE_FILE_NAME CPackConfig.cmake | cut -d \" -f 2`
    - export CPACK_PACKAGE_VERSION=`grep 'set(CPACK_PACKAGE_VERSION ' CPackConfig.cmake | cut -d \" -f 2`
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${CPACK_PACKAGE_FILE_NAME}.rpm" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/hcs-benchmark/${CPACK_PACKAGE_VERSION}/${CPACK_PACKAGE_FILE_NAME}.rpm"'
  artifacts:
    paths:
      - build/*.rpm
    name: ${CI_PROJECT_NAME}-fedora32
